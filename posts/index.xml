<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom" xmlns:content="http://purl.org/rss/1.0/modules/content/">
  <channel>
    <title>Posts on Zhouyinhui&#39;s Space</title>
    <link>/posts/</link>
    <description>Recent content in Posts on Zhouyinhui&#39;s Space</description>
    <image>
      <url>%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</url>
      <link>%3Clink%20or%20path%20of%20image%20for%20opengraph,%20twitter-cards%3E</link>
    </image>
    <generator>Hugo -- gohugo.io</generator>
    <lastBuildDate>Mon, 30 May 2022 10:29:19 +0800</lastBuildDate><atom:link href="/posts/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>[Golang] 使用overseer实现APP重启</title>
      <link>/posts/golang_overseer_restart_app/</link>
      <pubDate>Mon, 30 May 2022 10:29:19 +0800</pubDate>
      
      <guid>/posts/golang_overseer_restart_app/</guid>
      <description>前两天在一个项目中需要实现这样一个功能&amp;quot;点击一个按钮或通过API来重启后台服务&amp;quot;
发现Github上有一个叫overseer的模块, 试用了一下,效果还不错
使用方法很简单
package main  import ( 	&amp;#34;fmt&amp;#34; 	&amp;#34;github.com/jpillora/overseer&amp;#34; 	&amp;#34;time&amp;#34; )  func main() { 	overseer.Run(overseer.Config{ 	Program: app, 	}) }  func app(overseer.State) {  	fmt.Println(&amp;#34;app started : &amp;#34; + time.Now().Format(&amp;#34;2006-01-02 03:04:05 pm&amp;#34;))  	fmt.Println(&amp;#34;Hello, 回车键重启APP&amp;#34;)  	_, _ = fmt.Scanln()  	overseer.Restart() } 项目地址: https://github.com/jpillora/overseer
其README中介绍了如何使用这个模块来优雅地进行自我升级.</description>
    </item>
    
    <item>
      <title>如何利用IFPS创建这个博客</title>
      <link>/posts/how_to_create_this_blog/</link>
      <pubDate>Mon, 27 Dec 2021 19:29:39 +0800</pubDate>
      
      <guid>/posts/how_to_create_this_blog/</guid>
      <description>第1步：在Github上新建一个项目 登录你的Github账号，按照向导 新建一个 Repository
假设你新建的Repo为： https://github.com/yourUserName/MyBlog.git
第2步： Clone项目到本地并尝试push git clone https://github.com/yourUserName/MyBlog.git 尝试新建一个文件和push
cd MyBlog git init touch index.html echo &amp;#34;hi&amp;#34; &amp;gt;&amp;gt; index.html git add index.html git commit -m &amp;#34;add index.html&amp;#34; git branch -M main git remote add origin https://github.com/yourUserName/MyBlog.git git push -u origin main 尝试提交的时候，会让你输入github账号和token（gitbub弃用了密码登录，而是使用token）
如果你还没有生成过token，可以到Github你账户下的settings -&amp;gt; Developer settings 下生成token
第3步：使用hugo自动生成静态网站  安装hugo  brew install hugo   按照官方教程新建一个网站 官方教程： https://gohugo.io/getting-started/quick-start/
假设你的网站名称叫MySite
  编译你的网站 hugo -D ，编译出来的静态网页的全部内容在MySite/public目录下
  在本地运行试试 hugo server -D , 不出意外，你应该能在http://localhost:1313上看到你的站点</description>
    </item>
    
    <item>
      <title>Welcome</title>
      <link>/posts/welcome/</link>
      <pubDate>Fri, 24 Dec 2021 12:52:54 +0800</pubDate>
      
      <guid>/posts/welcome/</guid>
      <description>The first article.</description>
    </item>
    
  </channel>
</rss>
